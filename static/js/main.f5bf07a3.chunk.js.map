{"version":3,"sources":["Slice.js","Pie.js","arrays.js","dscomponent.js","QualityEducation.js","App.js","index.js"],"names":["translate","x","y","Slice","value","label","fill","innerRadius","outerRadius","cornerRadius","padAngle","sectionNumber","setSectionNumber","isClicked","setIsClicked","props","useState","isHovered","setIsHovered","arc","d3","onMouseOver","event","parseInt","currentTarget","id","onMouseOut","onClick","d","transform","centroid","dy","className","Pie","data","pie","scale","map","i","color","key","renderSlice","labels","colors","Dscomponent","name","interval","drawInterval","this","affectedLearner","pastAffectedLearner","totalLearner","isDrawed","chartInterval","covidDataDiff","covidData","dataInterval","setInterval","time","clearInterval","offset","covidDataChart","timepass","Math","floor","randomX","canvas","random","width","randomY","height","distance","a","b","sqrt","dscData","Ball","radius","bigBalls","dx","mass","ctx","beginPath","round","PI","fillStyle","closePath","atan2","actionCanvas","getContext","leftBalls","rightBalls","mouseon","offsetX","offsetY","mousePosition","lastTime","Date","getTime","currentTime","dt","wallCollision","ball","ballCollision","balls","length","j","obj1","obj2","vCollision","_distance","vCollisionNorm","vRelativeVelocity","speed","staticCollision","ob1","ob2","emergency","overlap","smallerObject","biggerObject","theta","cos","sin","moveObjects","ob","drawObjects","obj","draw","tempInterval","prevData","currentData","covidRate","diff","splice","abs","clearRect","style","backgroundColor","rect","font","textAlign","textBaseline","fillText","window","requestAnimationFrame","addEventListener","e","updateFutureData","Canvas4","parent","$parent","$target","document","createElement","$actionCanvas","render","display","justifyContent","alignItems","element","append","chart","tempCanvas","entries","tempCtx","putImageData","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","limitBottom","undefined","limitRight","pos","fillRect","drawChart","yPlot","pop","strokeStyle","moveTo","lineTo","stroke","drawAxis","xPlot","Object","valueY","drawTempChart","getImageData","Simulation4","Dsc4","$simulationComp","$canvasComp","flexDirection","$container","getElementById","QualityEducation","dsc","useEffect","border","marginTop","App","innerWidth","innerHeight","min","rate","setRate","Array","borderRadius","src","ReactDOM"],"mappings":"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","file":"static/js/main.f5bf07a3.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const translate = (x, y) => `translate(${x}, ${y})`;\nexport const Slice = ({\n  value,\n  label,\n  fill,\n  innerRadius = 0,\n  outerRadius,\n  cornerRadius,\n  padAngle,\n  sectionNumber,\n  setSectionNumber,\n  isClicked,\n  setIsClicked,\n  ...props\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const onMouseOver = (event) => {\n    // console.log(event.currentTarget.childNodes[1].childNodes[0]); // get innerText\n    setIsHovered(true);\n    !isClicked && setSectionNumber(parseInt(event.currentTarget.id));\n  };\n\n  const onMouseOut = () => {\n    setIsHovered(false);\n    !isClicked && setSectionNumber(-1);\n  };\n\n  const handleClick = () => {\n    sectionNumber === 3 && setIsClicked(!isClicked);\n  };\n\n  if (isHovered) {\n    outerRadius *= 1.1;\n  }\n  let arc = d3.svg\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius)\n    .cornerRadius(cornerRadius)\n    .padAngle(padAngle);\n  return (\n    <g\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onClick={handleClick}\n      {...props}\n    >\n      <path d={arc(value)} fill={fill} />\n      <text\n        transform={translate(...arc.centroid(value))}\n        dy=\".35em\"\n        className=\"label\"\n      >\n        {label}\n      </text>\n    </g>\n  );\n};\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { Slice, translate } from \"./Slice\";\n\nexport const Pie = ({\n  x,\n  y,\n  data,\n  // setSectionNumber,\n  // innerRadius,\n  // outerRadius,\n  // cornerRadius,\n  // padAngle,\n  ...props\n}) => {\n  // let colorScale = d3.scale.category10();\n  let pie = d3.layout.pie();\n  const renderSlice = (value, i, label, color) => {\n    return (\n      <Slice\n        key={i}\n        id={i}\n        value={value}\n        label={label}\n        fill={color}\n        // innerRadius={innerRadius}\n        // outerRadius={outerRadius}\n        // cornerRadius={cornerRadius}\n        // padAngle={padAngle}\n        // setSectionNumber={setSectionNumber}\n        {...props}\n      />\n    );\n  };\n  return (\n    <g transform={translate(x, y)}>\n      {pie(data.scale).map((value, i) =>\n        renderSlice(value, i, data.label[i], data.color[i])\n      )}\n    </g>\n  );\n};\n","export const labels = [\n  \"No poverty\",\n  \"Zero hunger\",\n  \"Good Health and Well-being\",\n  \"Quality Education\",\n  \"Gender Equality\",\n  \"Clean Water and Sanitation\",\n  \"Affordable and Clean Energy\",\n  \"Decent Work and Economy Growth\",\n  \"Industry, Innovation, and Infrastructure\",\n  \"Reduced Inequalities\",\n  \"Sustainable cities and communities\",\n  \"Responsible Consumption and Production\",\n  \"Climate Action\",\n  \"Life Below Water\",\n  \"Life on Land\",\n  \"Peace, Justice and Strong Institutions\",\n  \"Partnerships\",\n];\nexport const colors = [\n  \"#EB1C2D\",\n  \"#D2A12A\",\n  \"#279B48\",\n  \"#C32136\",\n  \"#EF4128\",\n  \"#06ADD9\",\n  \"#FEB614\",\n  \"#8F1838\",\n  \"#F36E29\",\n  \"#E11284\",\n  \"#F99E29\",\n  \"#CF8E2A\",\n  \"#3F7E45\",\n  \"#1C97D3\",\n  \"#59BA47\",\n  \"#136A9F\",\n  \"#14496B\",\n];\n","class Dscomponent {\n  $container;\n  $target;\n  constructor(name) {\n    let interval;\n    class Data {\n      constructor() {\n        this.affectedLearner = 999014;\n        this.pastAffectedLearner = 0;\n        this.totalLearner = this.affectedLearner * 1000;\n        this.isDrawed = false;\n        this.chartInterval = 0;\n        this.covidDataDiff = 0;\n        this.covidData = {\n          \"1(0216)\": 0,\n          \"2(0301)\": 17.1,\n          \"3(0316)\": 44,\n          \"4(0401)\": 91.3,\n          \"5(0503)\": 73.4,\n          \"6(future)\": 72,\n          \"7(future)\": 71,\n          \"8(last)\": 69,\n        };\n        this.dataInterval = interval;\n\n        interval = setInterval(() => {\n          time += 200;\n          if (time > 17000) clearInterval(interval);\n          if (time > 0 && time < offset) {\n            this.covidDataDiff += (this.covidData[covidDataChart[1]] - this.covidData[covidDataChart[0]]) / 11.7;\n          }\n          if (time > offset && time < offset * 2) {\n            this.covidDataDiff += (this.covidData[covidDataChart[2]] - this.covidData[covidDataChart[1]]) / 11.7;\n          }\n          if (time > offset * 2 && time < offset * 3) {\n            this.covidDataDiff += (this.covidData[covidDataChart[3]] - this.covidData[covidDataChart[2]]) / 11.7;\n          }\n          if (time > offset * 3 && time < offset * 4) {\n            this.covidDataDiff += (this.covidData[covidDataChart[4]] - this.covidData[covidDataChart[3]]) / 11.7;\n          }\n          if (time > offset * 4 && time < offset * 5) {\n            timepass = true;\n            this.covidDataDiff += (this.covidData[covidDataChart[5]] - this.covidData[covidDataChart[4]]) / 11.7;\n          }\n          if (time > offset * 5 && time < offset * 6) {\n            this.covidDataDiff += (this.covidData[covidDataChart[6]] - this.covidData[covidDataChart[5]]) / 11.7;\n          }\n          if (time > offset * 6 && time < offset * 7) {\n            this.covidDataDiff += (this.covidData[covidDataChart[7]] - this.covidData[covidDataChart[6]]) / 11.7;\n          }\n        }, 200);\n      }\n\n      getSubtractAffectedLearner() {\n        return Math.floor(this.affectedLearner / 10000000) - Math.floor(this.pastAffectedLearner / 10000000);\n      }\n      getAffectedLearner() {\n        return Math.floor(this.affectedLearner / 10000000);\n      }\n      getTotalLearner() {\n        return Math.floor(this.totalLearner / 10000000);\n      }\n      updateFutureData() {\n        if (timepass) {\n          if (time > offset * 4 && time < offset * 5) {\n            this.covidData[covidDataChart[5]] -= 0.8;\n            this.covidData[covidDataChart[6]] -= 0.8;\n            this.covidData[covidDataChart[7]] -= 0.8;\n          }\n          if (time > offset * 5 && time < offset * 6) {\n            this.covidData[covidDataChart[6]] -= 0.8;\n            this.covidData[covidDataChart[7]] -= 0.8;\n          }\n          if (time > offset * 6 && time < offset * 7) {\n            this.covidData[covidDataChart[7]] -= 0.8;\n          }\n        }\n      }\n    }\n    const data = new Data();\n    let canvas = null;\n    this.dscData = data;\n    let drawInterval;\n    this.drawInterval = drawInterval;\n\n    function randomColor(bigBalls) {\n      // return rc;\n      return \"white\";\n    }\n\n    function randomX(canvas) {\n      let x = Math.floor(Math.random() * canvas.width + canvas.width / 2);\n      if (x < 30) {\n        x = 30;\n      } else if (x + 30 > canvas.width) {\n        x = canvas.width - 30;\n      }\n      return x;\n    }\n\n    function randomY(canvas) {\n      let y = Math.floor(Math.random() * canvas.height);\n      if (y < 30) {\n        y = 30;\n      } else if (y + 30 > canvas.height) {\n        y = canvas.height - 30;\n      }\n      return y;\n    }\n\n    function randomDx() {\n      const dxs = [2, -2];\n      let r = Math.floor(Math.random() * 2);\n      return dxs[r];\n      // let r = Math.floor(Math.random() * 10 - 4);\n      // return r;\n    }\n\n    function randomDy() {\n      const dys = [2, -2];\n      let r = Math.floor(Math.random() * 2);\n      return dys[r];\n      // let r = Math.floor(Math.random() * 10 - 3);\n      // return r;\n    }\n\n    function distance(a, b) {\n      return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n    }\n\n    class Ball {\n      constructor(x, y, radius, bigBalls) {\n        this.radius = radius;\n        this.x = x;\n        this.y = y;\n\n        this.dx = randomDx();\n        this.dy = randomDy();\n\n        // mass is that of a sphere as opposed to circle\n        // it *does* make a difference in how realistic it looks\n        this.mass = this.radius * this.radius * this.radius;\n        this.color = randomColor();\n      }\n\n      draw(ctx) {\n        ctx.beginPath();\n        ctx.arc(Math.round(this.x), Math.round(this.y), this.radius, 0, 2 * Math.PI);\n        ctx.fillStyle = this.color;\n        ctx.fill();\n        // ctx.strokeStyle = \"rgba(0, 0, 0, 0.6)\";\n        // ctx.stroke();\n        ctx.closePath();\n      }\n\n      speed() {\n        // magnitude of velocity vector\n        return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n      }\n      angle() {\n        // velocity's angle with the x axis\n        return Math.atan2(this.dy, this.dx);\n      }\n      onGround() {\n        return this.y + this.radius >= canvas.height;\n      }\n    }\n\n    const covidDataChart = [\"1(0216)\", \"2(0301)\", \"3(0316)\", \"4(0401)\", \"5(0503)\", \"6(future)\", \"7(future)\", \"8(last)\"];\n\n    let time = 0;\n    let offset = 2428;\n    let timepass = false;\n\n    function actionCanvas(canvas) {\n      // data.run();\n      let ctx = canvas.getContext(\"2d\");\n\n      let leftBalls = [];\n      let rightBalls = [];\n\n      let mouseon = false;\n      let offsetX = 0;\n      let offsetY = 0;\n      let mousePosition = false;\n\n      let bigBalls = false;\n\n      let lastTime = new Date().getTime();\n      let currentTime = 0;\n      let dt = 0;\n\n      // let numStartingSmallBalls = data.getTotalLearner();\n      // let numStartingBigBalls = 0;\n      let numStartingLeftBalls = 100;\n\n      function clearCanvas() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n      }\n\n      function canvasBackground() {\n        if (mousePosition === \"right\") {\n          canvas.style.backgroundColor = \"black\";\n        } else {\n          canvas.style.backgroundColor = \"#136A9F\";\n        }\n        ctx.beginPath();\n        ctx.rect(0, 0, canvas.width / 2, canvas.height);\n        if (mousePosition === \"left\") {\n          ctx.fillStyle = \"black\";\n        } else {\n          ctx.fillStyle = \"#8F1838\";\n        }\n        ctx.fill();\n      }\n\n      function wallCollision(ball) {\n        // console.log(ball);\n        if (ball.x < canvas.width / 2 - ball.radius) {\n          if (ball.x - ball.radius + ball.dx < 0 || ball.x + ball.radius + ball.dx > canvas.width / 2) {\n            ball.dx *= -1;\n          }\n        }\n        if (ball.x > canvas.width / 2 + ball.radius) {\n          if (ball.x - ball.radius + ball.dx < canvas.width / 2 || ball.x + ball.radius + ball.dx > canvas.width) {\n            ball.dx *= -1;\n          }\n        }\n        if (ball.y - ball.radius + ball.dy < 0 || ball.y + ball.radius + ball.dy > canvas.height) {\n          ball.dy *= -1;\n        }\n        if (ball.y + ball.radius > canvas.height) {\n          ball.y = canvas.height - ball.radius;\n        }\n        if (ball.y - ball.radius < 0) {\n          ball.y = ball.radius;\n        }\n        if (ball.x + ball.radius > canvas.width) {\n          ball.x = canvas.width - ball.radius;\n        }\n        if (ball.x - ball.radius < 0) {\n          ball.x = ball.radius;\n        }\n      }\n\n      function ballCollision(balls) {\n        for (let i = 0; i < balls.length - 1; i++) {\n          for (let j = i + 1; j < balls.length; j++) {\n            let obj1 = balls[i];\n            let obj2 = balls[j];\n            let dist = distance(obj1, obj2);\n            if (dist < obj1.radius + obj2.radius) {\n              let vCollision = { x: obj2.x - obj1.x, y: obj2.y - obj1.y };\n              let _distance = Math.sqrt((obj2.x - obj1.x) * (obj2.x - obj1.x) + (obj2.y - obj1.y) * (obj2.y - obj1.y));\n              let vCollisionNorm = { x: vCollision.x / _distance, y: vCollision.y / _distance };\n              let vRelativeVelocity = { x: obj1.dx - obj2.dx, y: obj1.dy - obj2.dy };\n              let speed = vRelativeVelocity.x * vCollisionNorm.x + vRelativeVelocity.y * vCollisionNorm.y;\n\n              obj1.dx -= speed * vCollisionNorm.x;\n              obj1.dy -= speed * vCollisionNorm.y;\n              obj2.dx += speed * vCollisionNorm.x;\n              obj2.dy += speed * vCollisionNorm.y;\n              staticCollision(obj1, obj2);\n            }\n          }\n          wallCollision(balls[i]);\n        }\n\n        if (balls.length > 0) wallCollision(balls[balls.length - 1]);\n      }\n\n      // function ballCollision2() {\n      //   for (let i = 0; i < leftBalls.length - 1; i++) {\n      //     for (let j = i + 1; j < leftBalls.length; j++) {\n      //       let ob1 = leftBalls[i];\n      //       let ob2 = leftBalls[j];\n      //       let dist = distance(ob1, ob2);\n\n      //       if (dist < ob1.radius + ob2.radius) {\n      //         let theta1 = ob1.angle();\n      //         let theta2 = ob2.angle();\n      //         let phi = Math.atan2(ob2.y - ob1.y, ob2.x - ob1.x);\n      //         let m1 = ob1.mass;\n      //         let m2 = ob2.mass;\n      //         let v1 = ob1.speed();\n      //         let v2 = ob2.speed();\n\n      //         let dx1F =\n      //           ((v1 * Math.cos(theta1 - phi) * (m1 - m2) + 2 * m2 * v2 * Math.cos(theta2 - phi)) / (m1 + m2)) * Math.cos(phi) +\n      //           v1 * Math.sin(theta1 - phi) * Math.cos(phi + Math.PI / 2);\n      //         let dy1F =\n      //           ((v1 * Math.cos(theta1 - phi) * (m1 - m2) + 2 * m2 * v2 * Math.cos(theta2 - phi)) / (m1 + m2)) * Math.sin(phi) +\n      //           v1 * Math.sin(theta1 - phi) * Math.sin(phi + Math.PI / 2);\n      //         let dx2F =\n      //           ((v2 * Math.cos(theta2 - phi) * (m2 - m1) + 2 * m1 * v1 * Math.cos(theta1 - phi)) / (m1 + m2)) * Math.cos(phi) +\n      //           v2 * Math.sin(theta2 - phi) * Math.cos(phi + Math.PI / 2);\n      //         let dy2F =\n      //           ((v2 * Math.cos(theta2 - phi) * (m2 - m1) + 2 * m1 * v1 * Math.cos(theta1 - phi)) / (m1 + m2)) * Math.sin(phi) +\n      //           v2 * Math.sin(theta2 - phi) * Math.sin(phi + Math.PI / 2);\n\n      //         ob1.dx = dx1F;\n      //         ob1.dy = dy1F;\n      //         ob2.dx = dx2F;\n      //         ob2.dy = dy2F;\n      //         // ob1.dx *= -1;\n      //         // ob1.dy *= -1;\n      //         // ob2.dx *= -1;\n      //         // ob2.dy *= -1;\n\n      //         staticCollision(ob1, ob2);\n      //       }\n      //     }\n      //     wallCollision(leftBalls[i]);\n      //   }\n\n      //   if (leftBalls.length > 0) wallCollision(leftBalls[leftBalls.length - 1]);\n      // }\n\n      function staticCollision(ob1, ob2, emergency = false) {\n        let overlap = ob1.radius + ob2.radius - distance(ob1, ob2);\n        // let smallerObject = ob1.radius < ob2.radius ? ob1 : ob2;\n        // let biggerObject = ob1.radius > ob2.radius ? ob1 : ob2;\n        let smallerObject = ob1;\n        let biggerObject = ob2;\n\n        // When things go normally, this line does not execute.\n        // \"Emergency\" is when staticCollision has run, but the collision\n        // still hasn't been resolved. Which implies that one of the objects\n        // is likely being jammed against a corner, so we must now move the OTHER one instead.\n        // in other words: this line basically swaps the \"little guy\" role, because\n        // the actual little guy can't be moved away due to being blocked by the wall.\n        if (emergency) [smallerObject, biggerObject] = [biggerObject, smallerObject];\n\n        let theta = Math.atan2(biggerObject.y - smallerObject.y, biggerObject.x - smallerObject.x);\n        smallerObject.x -= overlap * Math.cos(theta);\n        smallerObject.y -= overlap * Math.sin(theta);\n\n        if (distance(ob1, ob2) < ob1.radius + ob2.radius) {\n          // we don't want to be stuck in an infinite emergency.\n          // so if we have already run one emergency round; just ignore the problem.\n          if (!emergency) staticCollision(ob1, ob2, true);\n        }\n      }\n\n      // function keyDownHandler(event) {\n      //   if (event.keyCode == 67) {\n      //     // c\n      //     leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n      //   } else if (event.keyCode == 80) {\n      //     // p\n      //     paused = !paused;\n      //   } else if (event.keyCode == 71) {\n      //     // g\n      //     // This feature WAS taken out\n      //     // because of a bug where\n      //     // balls \"merge\" with each other\n      //     // when under a lot of pressure.\n\n      //     // putting back in\n\n      //     gravityOn = !gravityOn;\n      //   } else if (event.keyCode == 65) {\n      //     // A\n      //     leftHeld = true;\n      //   } else if (event.keyCode == 87) {\n      //     // W\n      //     upHeld = true;\n      //   } else if (event.keyCode == 68) {\n      //     // D\n      //     rightHeld = true;\n      //   } else if (event.keyCode == 83) {\n      //     // S\n      //     downHeld = true;\n      //   } else if (event.keyCode == 82) {\n      //     // r\n      //     leftBalls = [];\n      //   } else if (event.keyCode == 75) {\n      //     // k\n      //     clearCanv = !clearCanv;\n      //   } else if (event.keyCode == 88) {\n      //     // x\n      //     bigBalls = !bigBalls;\n      //   }\n      // }\n\n      // function applyGravity() {\n      //   for (let obj in leftBalls) {\n      //     let ob = leftBalls[obj];\n      //     if (ob.onGround() == false) {\n      //       ob.dy += 0.29;\n      //     }\n\n      //     // apply basic drag\n      //     ob.dx *= 0.99;\n      //     ob.dy *= 0.975;\n      //   }\n      // }\n\n      function moveObjects(balls) {\n        for (let i = 0; i < balls.length; i++) {\n          let ob = balls[i];\n          ob.x += ob.dx * dt;\n          ob.y += ob.dy * dt;\n        }\n      }\n\n      function drawObjects(balls) {\n        for (let obj in balls) {\n          balls[obj].draw(ctx);\n        }\n      }\n\n      function draw() {\n        currentTime = new Date().getTime();\n        dt = (currentTime - lastTime) / 1000; // delta time in seconds\n\n        // dirty and lazy solution\n        // instead of scaling up every velocity vector the program\n        // we increase the speed of time\n        dt *= 20;\n\n        clearCanvas();\n        canvasBackground();\n\n        {\n          moveObjects(leftBalls);\n          moveObjects(rightBalls);\n          ballCollision(leftBalls);\n          ballCollision(rightBalls);\n        }\n\n        drawObjects(leftBalls);\n        drawObjects(rightBalls);\n\n        if (mouseon) {\n          // The size of the emoji is set with the font\n          ctx.font = \"16px serif\";\n          // use these alignment properties for \"better\" positioning\n          ctx.textAlign = \"center\";\n          ctx.textBaseline = \"top\";\n          // draw the emoji\n          if (mousePosition === \"left\") {\n            ctx.fillText(\"🌐ONLINE EDU\", offsetX, offsetY);\n          }\n          if (mousePosition === \"right\") {\n            ctx.fillText(\"🏫GOOD FACILITY\", offsetX, offsetY);\n          }\n        }\n\n        //logger();\n\n        lastTime = currentTime;\n        window.requestAnimationFrame(draw);\n      }\n\n      // spawn the initial small thingies.\n      for (let i = 0; i < numStartingLeftBalls; i++) {\n        leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n      }\n\n      // // manually spawn the few large ones that\n      // // start with no velocity. (lazy code)\n      // bigBalls = true;\n      // for (i = 0; i < numStartingBigBalls; i++) {\n      //   let temp = new Ball(randomX(canvas), randomY(canvas), randomRadius(bigBalls), bigBalls);\n      //   temp.dx = randomDx() / 8;\n      //   temp.dy = randomDy() / 12;\n      //   leftBalls[leftBalls.length] = temp;\n      // }\n\n      let prevData = 0;\n      let currentData = 0;\n      let time = 0;\n      drawInterval = setInterval(() => {\n        time += 200;\n        if (time > 17000) clearInterval(drawInterval);\n        const covidRate = data.covidDataDiff;\n        currentData = covidRate;\n        let diff = currentData - prevData;\n        if (diff > 0) {\n          for (let i = 0; i < Math.round(diff); i++) {\n            leftBalls.splice(0, 1);\n            rightBalls[rightBalls.length] = new Ball(30, randomY(canvas), 5, bigBalls);\n          }\n        } else {\n          if (mouseon) {\n            for (let i = 0; i < Math.round(Math.abs(diff) + 0.3); i++) {\n              rightBalls.splice(0, 1);\n              leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n            }\n          } else {\n            for (let i = 0; i < Math.round(Math.abs(diff)); i++) {\n              rightBalls.splice(0, 1);\n              leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n            }\n          }\n        }\n        prevData = currentData;\n      }, 200);\n\n      draw();\n\n      let tempInterval;\n\n      canvas.addEventListener(\"mousemove\", onMouseMove, false);\n      canvas.addEventListener(\"mouseenter\", () => {\n        if (!data.isDrawed) {\n          tempInterval = setInterval(() => {\n            data.updateFutureData();\n          }, 100);\n        }\n      });\n      function onMouseMove(e) {\n        mouseon = true;\n        offsetX = e.offsetX;\n        offsetY = e.offsetY;\n        if (e.offsetX < canvas.width / 2) {\n          mousePosition = \"left\";\n        } else {\n          mousePosition = \"right\";\n        }\n      }\n      canvas.addEventListener(\n        \"mouseleave\",\n        () => {\n          mouseon = false;\n          mousePosition = false;\n          clearInterval(tempInterval);\n        },\n        false,\n      );\n    }\n\n    class Canvas4 {\n      $parent;\n      $target;\n      $actionCanvas;\n      constructor(parent) {\n        this.$parent = parent;\n        this.$target = document.createElement(\"div\");\n        this.$actionCanvas = document.createElement(\"canvas\");\n        this.$actionCanvas.id = \"test-canvas\";\n        this.$actionCanvas.width = \"400\";\n        this.$actionCanvas.height = \"200\";\n\n        this.render(this.$parent, this.$target);\n        this.render(this.$target, this.$actionCanvas);\n\n        this.$target.style.height = \"200px\";\n        this.$target.style.display = \"flex\";\n        this.$target.style.justifyContent = \"center\";\n        this.$target.style.alignItems = \"center\";\n        actionCanvas(this.$actionCanvas);\n      }\n\n      render($parent, element) {\n        $parent.append(element);\n      }\n    }\n\n    function chart(canvas) {\n      const covidData = data.covidData;\n      const tempCanvas = document.createElement(\"canvas\");\n      tempCanvas.width = 400;\n      tempCanvas.height = 100;\n      const tempCtx = tempCanvas.getContext(\"2d\");\n      var ctx = canvas.getContext(\"2d\");\n\n      let lastTime = new Date().getTime();\n      let currentTime = 0;\n      let dt = 0;\n\n      let entries;\n\n      // setInterval(() => {\n      //   data.push(11);\n      // }, 1000);\n\n      drawChart();\n\n      // function drawGrid() {\n      //   let xGrid = 10;\n      //   let yGrid = 10;\n      //   let cellSize = 10;\n      //   tempCtx.beginPath();\n      //   while (xGrid < canvas.height) {\n      //     tempCtx.moveTo(0, xGrid);\n      //     tempCtx.lineTo(canvas.width, xGrid);\n      //     xGrid += cellSize;\n      //   }\n      //   while (yGrid < canvas.width) {\n      //     tempCtx.moveTo(yGrid, 0);\n      //     tempCtx.lineTo(yGrid, canvas.height);\n      //     yGrid += cellSize;\n      //   }\n      //   tempCtx.strokeStyle = \"#ccc\";\n      //   tempCtx.stroke();\n      // }\n\n      function drawAxis() {\n        let yPlot = 90;\n        let pop = 0;\n\n        tempCtx.beginPath();\n        tempCtx.strokeStyle = \"black\";\n        tempCtx.fillStyle = \"#136A9F\";\n        tempCtx.moveTo(50, 20);\n        tempCtx.lineTo(50, 80);\n        tempCtx.lineTo(380, 80);\n        tempCtx.lineTo(380, 20);\n        tempCtx.lineTo(50, 20);\n        tempCtx.moveTo(50, 80);\n        tempCtx.fill();\n\n        tempCtx.fillStyle = \"black\";\n\n        for (let i = 0; i < 2; i++) {\n          tempCtx.fillText(pop, 20, yPlot);\n          pop += 100;\n          yPlot -= 70;\n        }\n        tempCtx.stroke();\n      }\n\n      function drawTempChart() {\n        tempCtx.clearRect(0, 0, canvas.width, canvas.height);\n        tempCtx.fillStyle = \"white\";\n        tempCtx.rect(0, 0, canvas.width, canvas.height);\n        tempCtx.fill();\n        drawAxis();\n        tempCtx.beginPath();\n        tempCtx.strokeStyle = \"black\";\n        tempCtx.moveTo(50, 80);\n        tempCtx.font = \"bold normal 10px Verdana\";\n\n        var xPlot = 50;\n\n        entries = Object.entries(covidData);\n\n        for (const [key, value] of entries) {\n          var valueY = (60 * (100 - value)) / 100 + 20;\n          // tempCtx.fillText(\"(\" + key + \")\", xPlot, valueInBlocks - 5);\n          if (key === \"8(last)\") {\n            tempCtx.lineTo(380 - 1, valueY);\n            continue;\n          }\n          if (key !== \"1(0216)\") {\n            tempCtx.fillStyle = \"#8F1838\";\n          }\n          // tempCtx.arc(xPlot, valueY, 2, 0, Math.PI * 2, true);\n          tempCtx.lineTo(xPlot, valueY);\n          xPlot += 50;\n        }\n        tempCtx.lineTo(380, 80);\n        tempCtx.fill();\n      }\n\n      function putImageData(ctx, imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        var data = imageData.data;\n        var height = imageData.height;\n        var width = imageData.width;\n        dirtyX = dirtyX || 0;\n        dirtyY = dirtyY || 0;\n        dirtyWidth = dirtyWidth !== undefined ? dirtyWidth : width;\n        dirtyHeight = dirtyHeight !== undefined ? dirtyHeight : height;\n        var limitBottom = dirtyY + dirtyHeight;\n        var limitRight = dirtyX + dirtyWidth;\n        for (var y = dirtyY; y < limitBottom; y++) {\n          for (var x = dirtyX; x < limitRight; x++) {\n            var pos = y * width + x;\n            ctx.fillStyle =\n              \"rgba(\" + data[pos * 4 + 0] + \",\" + data[pos * 4 + 1] + \",\" + data[pos * 4 + 2] + \",\" + data[pos * 4 + 3] / 255 + \")\";\n            ctx.fillRect(x + dx, y + dy, 1, 1);\n          }\n        }\n      }\n\n      function drawChart() {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        drawTempChart();\n        currentTime = new Date().getTime();\n        dt = (currentTime - lastTime) / 1000; // delta time in seconds\n        // dirty and lazy solution\n        // instead of scaling up every velocity vector the program\n        // we increase the speed of time\n        dt *= 20;\n        if (currentTime - lastTime < 16500) {\n          const imageData = tempCtx.getImageData(0, 0, canvas.width, canvas.height);\n          ctx.rect(0, 0, canvas.width, canvas.height);\n          ctx.fill();\n          putImageData(ctx, imageData, 0, 0, 0, 0, 50 + dt, canvas.height);\n\n          requestAnimationFrame(drawChart);\n        } else {\n          data.isDrawed = true;\n          const imageData = tempCtx.getImageData(0, 0, canvas.width, canvas.height);\n          putImageData(ctx, imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n        }\n      }\n    }\n\n    class Simulation4 {\n      $parent;\n      $target;\n      constructor(parent) {\n        this.$parent = parent;\n        this.$target = document.createElement(\"canvas\");\n        this.$target.id = \"test-canvas2\";\n        this.$target.width = 400;\n        this.$target.height = 100;\n\n        this.render(this.$parent, this.$target);\n\n        chart(this.$target);\n      }\n\n      render($parent, element) {\n        $parent.append(element);\n      }\n    }\n\n    class Dsc4 {\n      $parent;\n      $target;\n      $simulationComp;\n      $canvasComp;\n      constructor(parent) {\n        this.$parent = parent;\n        this.$target = document.createElement(\"div\");\n        this.$simulationComp = new Simulation4(this.$target);\n        this.$canvasComp = new Canvas4(this.$target);\n\n        this.render(this.$parent, this.$target);\n\n        this.$target.style.display = \"flex\";\n        this.$target.style.flexDirection = \"column\";\n      }\n\n      render($parent, element) {\n        $parent.append(element);\n      }\n    }\n\n    const $container = document.getElementById(`${name}`);\n    this.$container = $container;\n    this.$target = null;\n\n    if ($container) this.$target = new Dsc4(this.$container);\n  }\n  clearIntervalAll() {\n    clearInterval(this.dscData.dataInterval);\n    clearInterval(this.drawInterval);\n  }\n}\n\nexport default Dscomponent;\n","import React, { useEffect } from \"react\";\nimport Dscomponent from \"./dscomponent\";\n\nexport const QualityEducation = (dsc) => {\n  useEffect(() => {\n    dsc = new Dscomponent(\"dscomponent\");\n  }, []);\n  return (\n    <>\n      <section className=\"quality-education\">\n        <h1>4. QualityEducation</h1>\n        <p>\n          Put your mouse inside the canvas. Then the chart will change. Up to the chart's peak is static data about the percentage of\n          affected learners by COVID-19 and subsequent data is dynamic.\n        </p>\n        <div>\n          <div className=\"color-description\">\n            <div className=\"color-square-red\"></div>\n            <div>affected Learner</div>\n          </div>\n          <div className=\"color-description\">\n            <div className=\"color-square-blue\"></div>\n            <div>Total Learner - affected Learner</div>\n          </div>\n        </div>\n        <div id=\"dscomponent\" style={{ width: \"400px\", height: \"300px\", border: \"3px solid black\", marginTop: \"4px\" }}></div>\n      </section>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Pie } from \"./Pie\";\nimport { labels, colors } from \"./arrays\";\nimport { QualityEducation } from \"./QualityEducation\";\n\nconst App = () => {\n  let dsc;\n\n  let width = window.innerWidth;\n  let height = window.innerHeight;\n  let minViewportSize = Math.min(width, height);\n  // set size of pie - ver1: 0.9\n  let radius = (minViewportSize * 0.98) / 2;\n  let x = width / 2;\n  let y = height / 2;\n  const defaultRate = 0.7;\n  const [sectionNumber, setSectionNumber] = useState(-1);\n  const [isClicked, setIsClicked] = useState(false);\n  const [rate, setRate] = useState(defaultRate);\n  useEffect(() => {\n    isClicked ? setRate(0.95) : setRate(defaultRate);\n    if (isClicked) {\n      if (dsc) dsc.clearIntervalAll();\n    }\n  }, [isClicked]);\n  return (\n    <>\n      <svg width=\"100%\" height=\"100%\">\n        <Pie\n          x={x}\n          y={y}\n          data={{\n            scale: Array(17).fill(1),\n            label: labels,\n            color: colors,\n          }}\n          innerRadius={radius * rate}\n          outerRadius={radius}\n          cornerRadius={6}\n          padAngle={0.01}\n          sectionNumber={sectionNumber}\n          setSectionNumber={setSectionNumber}\n          isClicked={isClicked}\n          setIsClicked={setIsClicked}\n        />\n      </svg>\n      {sectionNumber > -1 ? (\n        sectionNumber === 3 ? (\n          isClicked ? (\n            // detail\n            <QualityEducation dsc={dsc} />\n          ) : (\n            // preview\n            <section className=\"preview qe\">\n              <img\n                style={{ borderRadius: \"10px\" }}\n                width=\"100%\"\n                height=\"100%\"\n                src=\"https://github.com/17dscs/documentation/blob/master/images/dsc4-screenshot.png?raw=true\"\n              />\n            </section>\n          )\n        ) : (\n          //preparing..\n          <section className=\"preview\">\n            <h1>Preparing...</h1>\n          </section>\n        )\n      ) : null}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}