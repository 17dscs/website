{"version":3,"sources":["Slice.js","Pie.js","arrays.js","dscomponent.js","QualityEducation.js","App.js","index.js"],"names":["translate","x","y","Slice","value","label","fill","innerRadius","outerRadius","cornerRadius","padAngle","sectionNumber","setSectionNumber","isClicked","setIsClicked","props","useState","isHovered","setIsHovered","arc","d3","onMouseOver","event","parseInt","currentTarget","id","onMouseOut","onClick","d","transform","centroid","dy","className","Pie","data","pie","scale","map","i","color","key","renderSlice","labels","colors","randomX","canvas","Math","floor","random","width","randomY","height","distance","a","b","sqrt","Ball","radius","bigBalls","this","dx","mass","ctx","beginPath","round","PI","fillStyle","closePath","atan2","covidDataChart","time","timepass","affectedLearner","pastAffectedLearner","totalLearner","isDrawed","chartInterval","covidDataDiff","covidData","interval","setInterval","clearInterval","offset","actionCanvas","getContext","leftBalls","rightBalls","mouseon","offsetX","offsetY","mousePosition","lastTime","Date","getTime","currentTime","dt","wallCollision","ball","ballCollision","balls","length","j","obj1","obj2","vCollision","_distance","vCollisionNorm","vRelativeVelocity","speed","staticCollision","ob1","ob2","emergency","overlap","smallerObject","biggerObject","theta","cos","sin","moveObjects","ob","drawObjects","obj","draw","tempInterval","prevData","currentData","covidRate","diff","splice","abs","clearRect","style","backgroundColor","rect","font","textAlign","textBaseline","fillText","window","requestAnimationFrame","addEventListener","e","updateFutureData","Canvas4","parent","$parent","$target","document","createElement","$actionCanvas","render","display","justifyContent","alignItems","element","append","chart","tempCanvas","entries","tempCtx","putImageData","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","limitBottom","undefined","limitRight","pos","fillRect","drawChart","yPlot","pop","strokeStyle","moveTo","lineTo","stroke","drawAxis","xPlot","Object","valueY","drawTempChart","getImageData","Simulation4","Dsc4","$simulationComp","$canvasComp","flexDirection","Dscomponent","name","$container","getElementById","QualityEducation","useEffect","border","marginTop","App","innerWidth","innerHeight","min","rate","setRate","Array","borderRadius","src","ReactDOM"],"mappings":"4PAGaA,EAAY,SAACC,EAAGC,GAAJ,0BAAuBD,EAAvB,aAA6BC,EAA7B,MACZC,EAAQ,SAAC,GAaf,IAZLC,EAYI,EAZJA,MACAC,EAWI,EAXJA,MACAC,EAUI,EAVJA,KAUI,IATJC,mBASI,MATU,EASV,EARJC,EAQI,EARJA,YACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,SACAC,EAKI,EALJA,cACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACGC,EACC,8JAC8BC,oBAAS,GADvC,mBACGC,EADH,KACcC,EADd,KAiBAD,IACFT,GAAe,KAEjB,IAAIW,EAAMC,MACPD,MACAZ,YAAYA,GACZC,YAAYA,GACZC,aAAaA,GACbC,SAASA,GACZ,OACE,qCACEW,YA1BgB,SAACC,GAEnBJ,GAAa,IACZL,GAAaD,EAAiBW,SAASD,EAAME,cAAcC,MAwB1DC,WArBe,WACjBR,GAAa,IACZL,GAAaD,GAAkB,IAoB9Be,QAjBgB,WACA,IAAlBhB,GAAuBG,GAAcD,KAiB/BE,GAEJ,0BAAMa,EAAGT,EAAIf,GAAQE,KAAMA,IAC3B,0BACEuB,UAAW7B,EAAS,WAAT,cAAamB,EAAIW,SAAS1B,KACrC2B,GAAG,QACHC,UAAU,SAET3B,KCpDI4B,EAAM,SAAC,GAUb,IATLhC,EASI,EATJA,EACAC,EAQI,EARJA,EACAgC,EAOI,EAPJA,KAMGnB,EACC,gCAEAoB,EAAMf,SAAUe,MAkBpB,OACE,uBAAGN,UAAW7B,EAAUC,EAAGC,IACxBiC,EAAID,EAAKE,OAAOC,KAAI,SAACjC,EAAOkC,GAAR,OAnBL,SAAClC,EAAOkC,EAAGjC,EAAOkC,GACpC,OACE,kBAAC,EAAD,eACEC,IAAKF,EACLb,GAAIa,EACJlC,MAAOA,EACPC,MAAOA,EACPC,KAAMiC,GAMFxB,IAOJ0B,CAAYrC,EAAOkC,EAAGJ,EAAK7B,MAAMiC,GAAIJ,EAAKK,MAAMD,SCrC3CI,EAAS,CACpB,aACA,cACA,6BACA,oBACA,kBACA,6BACA,8BACA,iCACA,2CACA,uBACA,qCACA,yCACA,iBACA,mBACA,eACA,yCACA,gBAEWC,EAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,W,sBC7BF,SAASC,EAAQC,GACf,IAAI5C,EAAI6C,KAAKC,MAAMD,KAAKE,SAAWH,EAAOI,MAAQJ,EAAOI,MAAQ,GAMjE,OALIhD,EAAI,GACNA,EAAI,GACKA,EAAI,GAAK4C,EAAOI,QACzBhD,EAAI4C,EAAOI,MAAQ,IAEdhD,EAGT,SAASiD,EAAQL,GACf,IAAI3C,EAAI4C,KAAKC,MAAMD,KAAKE,SAAWH,EAAOM,QAM1C,OALIjD,EAAI,GACNA,EAAI,GACKA,EAAI,GAAK2C,EAAOM,SACzBjD,EAAI2C,EAAOM,OAAS,IAEfjD,EAmBT,SAASkD,EAASC,EAAGC,GACnB,OAAOR,KAAKS,KAAK,SAACF,EAAEpD,EAAIqD,EAAErD,EAAM,GAAf,SAAoBoD,EAAEnD,EAAIoD,EAAEpD,EAAM,I,IAG/CsD,E,WACJ,WAAYvD,EAAGC,EAAGuD,EAAQC,GAAW,oBACnCC,KAAKF,OAASA,EACdE,KAAK1D,EAAIA,EACT0D,KAAKzD,EAAIA,EAETyD,KAAKC,GAzBK,CAAC,GAAI,GACTd,KAAKC,MAAsB,EAAhBD,KAAKE,WAyBtBW,KAAK5B,GAlBK,CAAC,GAAI,GACTe,KAAKC,MAAsB,EAAhBD,KAAKE,WAqBtBW,KAAKE,KAAOF,KAAKF,OAASE,KAAKF,OAASE,KAAKF,OAC7CE,KAAKpB,MAvDA,Q,iDA0DFuB,GACHA,EAAIC,YACJD,EAAI3C,IAAI2B,KAAKkB,MAAML,KAAK1D,GAAI6C,KAAKkB,MAAML,KAAKzD,GAAIyD,KAAKF,OAAQ,EAAG,EAAIX,KAAKmB,IACzEH,EAAII,UAAYP,KAAKpB,MACrBuB,EAAIxD,OAGJwD,EAAIK,c,8BAKJ,OAAOrB,KAAKS,KAAKI,KAAKC,GAAKD,KAAKC,GAAKD,KAAK5B,GAAK4B,KAAK5B,M,8BAIpD,OAAOe,KAAKsB,MAAMT,KAAK5B,GAAI4B,KAAKC,M,iCAGhC,OAAOD,KAAKzD,EAAIyD,KAAKF,QAjFZ,KAiF6BN,W,KAIpCkB,EAAiB,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,YAAa,YAAa,WAErGC,EAAO,EAEPC,GAAW,EA4ETrC,EAAO,I,WAzEX,aAAe,IAAD,2BACZyB,KAAKa,gBAAkB,OACvBb,KAAKc,oBAAsB,EAC3Bd,KAAKe,aAAsC,IAAvBf,KAAKa,gBACzBb,KAAKgB,UAAW,EAChBhB,KAAKiB,cAAgB,EACrBjB,KAAKkB,cAAgB,EACrBlB,KAAKmB,UAAY,CACf,UAAW,EACX,UAAW,KACX,UAAW,GACX,UAAW,KACX,UAAW,KACX,YAAa,GACb,YAAa,GACb,UAAW,IAGb,IAAMC,EAAWC,aAAY,YAC3BV,GAAQ,KACG,MAAOW,cAAcF,GAC5BT,EAAO,GAAKA,EAzBT,OA0BL,EAAKO,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,MAE9FC,EA5BG,MA4BcA,EAAOY,OAC1B,EAAKL,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,MAE9FC,EAAOY,MAAcZ,EAAOY,OAC9B,EAAKL,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,MAE9FC,EAAOY,MAAcZ,EAAOY,OAC9B,EAAKL,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,MAE9FC,EAAOY,MAAcZ,EAAOY,QAC9BX,GAAW,EACX,EAAKM,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,MAE9FC,EAAOY,OAAcZ,EAAOY,QAC9B,EAAKL,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,MAE9FC,EAAOY,OAAcZ,EAAOY,QAC9B,EAAKL,gBAAkB,EAAKC,UAAUT,EAAe,IAAM,EAAKS,UAAUT,EAAe,KAAO,QAEjG,K,yEAIH,OAAOvB,KAAKC,MAAMY,KAAKa,gBAAkB,KAAY1B,KAAKC,MAAMY,KAAKc,oBAAsB,O,2CAG3F,OAAO3B,KAAKC,MAAMY,KAAKa,gBAAkB,O,wCAGzC,OAAO1B,KAAKC,MAAMY,KAAKe,aAAe,O,yCAGlCH,IACED,EAAOY,MAAcZ,EAAOY,QAC9BvB,KAAKmB,UAAUT,EAAe,KAAO,GACrCV,KAAKmB,UAAUT,EAAe,KAAO,GACrCV,KAAKmB,UAAUT,EAAe,KAAO,IAEnCC,EAAOY,OAAcZ,EAAOY,QAC9BvB,KAAKmB,UAAUT,EAAe,KAAO,GACrCV,KAAKmB,UAAUT,EAAe,KAAO,IAEnCC,EAAOY,OAAcZ,EAAOY,QAC9BvB,KAAKmB,UAAUT,EAAe,KAAO,S,MAQ7C,SAASc,EAAatC,GAEpB,IAAIiB,EAAMjB,EAAOuC,WAAW,MAExBC,EAAY,GACZC,EAAa,GAEbC,GAAU,EACVC,EAAU,EACVC,EAAU,EACVC,GAAgB,EAIhBC,GAAW,IAAIC,MAAOC,UACtBC,EAAc,EACdC,EAAK,EA0BT,SAASC,EAAcC,GAEjBA,EAAKhG,EAAI4C,EAAOI,MAAQ,EAAIgD,EAAKxC,SAC/BwC,EAAKhG,EAAIgG,EAAKxC,OAASwC,EAAKrC,GAAK,GAAKqC,EAAKhG,EAAIgG,EAAKxC,OAASwC,EAAKrC,GAAKf,EAAOI,MAAQ,KACxFgD,EAAKrC,KAAO,GAGZqC,EAAKhG,EAAI4C,EAAOI,MAAQ,EAAIgD,EAAKxC,SAC/BwC,EAAKhG,EAAIgG,EAAKxC,OAASwC,EAAKrC,GAAKf,EAAOI,MAAQ,GAAKgD,EAAKhG,EAAIgG,EAAKxC,OAASwC,EAAKrC,GAAKf,EAAOI,SAC/FgD,EAAKrC,KAAO,IAGZqC,EAAK/F,EAAI+F,EAAKxC,OAASwC,EAAKlE,GAAK,GAAKkE,EAAK/F,EAAI+F,EAAKxC,OAASwC,EAAKlE,GAAKc,EAAOM,UAChF8C,EAAKlE,KAAO,GAEVkE,EAAK/F,EAAI+F,EAAKxC,OAASZ,EAAOM,SAChC8C,EAAK/F,EAAI2C,EAAOM,OAAS8C,EAAKxC,QAE5BwC,EAAK/F,EAAI+F,EAAKxC,OAAS,IACzBwC,EAAK/F,EAAI+F,EAAKxC,QAEZwC,EAAKhG,EAAIgG,EAAKxC,OAASZ,EAAOI,QAChCgD,EAAKhG,EAAI4C,EAAOI,MAAQgD,EAAKxC,QAE3BwC,EAAKhG,EAAIgG,EAAKxC,OAAS,IACzBwC,EAAKhG,EAAIgG,EAAKxC,QAIlB,SAASyC,EAAcC,GACrB,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAMC,OAAS,EAAG9D,IAAK,CACzC,IAAK,IAAI+D,EAAI/D,EAAI,EAAG+D,EAAIF,EAAMC,OAAQC,IAAK,CACzC,IAAIC,EAAOH,EAAM7D,GACbiE,EAAOJ,EAAME,GAEjB,GADWjD,EAASkD,EAAMC,GACfD,EAAK7C,OAAS8C,EAAK9C,OAAQ,CACpC,IAAI+C,EAAa,CAAEvG,EAAGsG,EAAKtG,EAAIqG,EAAKrG,EAAGC,EAAGqG,EAAKrG,EAAIoG,EAAKpG,GACpDuG,EAAY3D,KAAKS,MAAMgD,EAAKtG,EAAIqG,EAAKrG,IAAMsG,EAAKtG,EAAIqG,EAAKrG,IAAMsG,EAAKrG,EAAIoG,EAAKpG,IAAMqG,EAAKrG,EAAIoG,EAAKpG,IACjGwG,EAAiB,CAAEzG,EAAGuG,EAAWvG,EAAIwG,EAAWvG,EAAGsG,EAAWtG,EAAIuG,GAClEE,EAAoB,CAAE1G,EAAGqG,EAAK1C,GAAK2C,EAAK3C,GAAI1D,EAAGoG,EAAKvE,GAAKwE,EAAKxE,IAC9D6E,EAAQD,EAAkB1G,EAAIyG,EAAezG,EAAI0G,EAAkBzG,EAAIwG,EAAexG,EAE1FoG,EAAK1C,IAAMgD,EAAQF,EAAezG,EAClCqG,EAAKvE,IAAM6E,EAAQF,EAAexG,EAClCqG,EAAK3C,IAAMgD,EAAQF,EAAezG,EAClCsG,EAAKxE,IAAM6E,EAAQF,EAAexG,EAClC2G,EAAgBP,EAAMC,IAG1BP,EAAcG,EAAM7D,IAGlB6D,EAAMC,OAAS,GAAGJ,EAAcG,EAAMA,EAAMC,OAAS,IAkD3D,SAASS,EAAgBC,EAAKC,GAAyB,IAApBC,EAAmB,wDAChDC,EAAUH,EAAIrD,OAASsD,EAAItD,OAASL,EAAS0D,EAAKC,GAGlDG,EAAgBJ,EAChBK,EAAeJ,EAQnB,GAAIC,EAAJ,OAA+C,CAACG,EAAcD,GAA9CA,EAAhB,KAA+BC,EAA/B,KAEA,IAAIC,EAAQtE,KAAKsB,MAAM+C,EAAajH,EAAIgH,EAAchH,EAAGiH,EAAalH,EAAIiH,EAAcjH,GACxFiH,EAAcjH,GAAKgH,EAAUnE,KAAKuE,IAAID,GACtCF,EAAchH,GAAK+G,EAAUnE,KAAKwE,IAAIF,GAElChE,EAAS0D,EAAKC,GAAOD,EAAIrD,OAASsD,EAAItD,SAGnCuD,GAAWH,EAAgBC,EAAKC,GAAK,IA0D9C,SAASQ,EAAYpB,GACnB,IAAK,IAAI7D,EAAI,EAAGA,EAAI6D,EAAMC,OAAQ9D,IAAK,CACrC,IAAIkF,EAAKrB,EAAM7D,GACfkF,EAAGvH,GAAKuH,EAAG5D,GAAKmC,EAChByB,EAAGtH,GAAKsH,EAAGzF,GAAKgE,GAIpB,SAAS0B,EAAYtB,GACnB,IAAK,IAAIuB,KAAOvB,EACdA,EAAMuB,GAAKC,KAAK7D,GAgDpB,IAAK,IAAIxB,EAAI,EAAGA,EAtQW,IAsQeA,IACxC+C,EAAUA,EAAUe,QAAU,IAAI5C,EAAKZ,EAAQC,GAASK,EAAQL,GAAS,GA/Q5D,GA4Rf,IAgCI+E,EAhCAC,EAAW,EACXC,EAAc,EACdxD,EAAO,EACLS,EAAWC,aAAY,YAC3BV,GAAQ,KACG,MAAOW,cAAcF,GAChC,IAAMgD,EAAY7F,EAAK2C,cAEnBmD,GADJF,EAAcC,GACWF,EACzB,GAAIG,EAAO,EACT,IAAK,IAAI1F,EAAI,EAAGA,EAAIQ,KAAKkB,MAAMgE,GAAO1F,IACpC+C,EAAU4C,OAAO,EAAG,GACpB3C,EAAWA,EAAWc,QAAU,IAAI5C,EAAK,GAAIN,EAAQL,GAAS,GAxSrD,QA2SX,GAAI0C,EACF,IAAK,IAAIjD,EAAI,EAAGA,EAAIQ,KAAKkB,MAAMlB,KAAKoF,IAAIF,GAAQ,IAAM1F,IACpDgD,EAAW2C,OAAO,EAAG,GACrB5C,EAAUA,EAAUe,QAAU,IAAI5C,EAAKZ,EAAQC,GAASK,EAAQL,GAAS,GA9SlE,QAiTT,IAAK,IAAIP,EAAI,EAAGA,EAAIQ,KAAKkB,MAAMlB,KAAKoF,IAAIF,IAAQ1F,IAC9CgD,EAAW2C,OAAO,EAAG,GACrB5C,EAAUA,EAAUe,QAAU,IAAI5C,EAAKZ,EAAQC,GAASK,EAAQL,GAAS,GAnTlE,GAuTbgF,EAAWC,IACV,MAtFH,SAASH,IACP7B,GAAc,IAAIF,MAAOC,UACzBE,GAAMD,EAAcH,GAAY,IAKhCI,GAAM,GA9NNjC,EAAIqE,UAAU,EAAG,EAAGtF,EAAOI,MAAOJ,EAAOM,QAKvCN,EAAOuF,MAAMC,gBADO,UAAlB3C,EAC6B,QAEA,UAEjC5B,EAAIC,YACJD,EAAIwE,KAAK,EAAG,EAAGzF,EAAOI,MAAQ,EAAGJ,EAAOM,QAEtCW,EAAII,UADgB,SAAlBwB,EACc,QAEA,UAElB5B,EAAIxD,OAoNFiH,EAAYlC,GACZkC,EAAYjC,GACZY,EAAcb,GACda,EAAcZ,GAGhBmC,EAAYpC,GACZoC,EAAYnC,GAERC,IAEFzB,EAAIyE,KAAO,aAEXzE,EAAI0E,UAAY,SAChB1E,EAAI2E,aAAe,MAEG,SAAlB/C,GACF5B,EAAI4E,SAAS,yBAAgBlD,EAASC,GAElB,UAAlBC,GACF5B,EAAI4E,SAAS,4BAAmBlD,EAASC,IAM7CE,EAAWG,EACX6C,OAAOC,sBAAsBjB,GAgD/BA,GAIA9E,EAAOgG,iBAAiB,aAQxB,SAAqBC,GACnBvD,GAAU,EACVC,EAAUsD,EAAEtD,QACZC,EAAUqD,EAAErD,QAEVC,EADEoD,EAAEtD,QAAU3C,EAAOI,MAAQ,EACb,OAEA,WAf8B,GAClDJ,EAAOgG,iBAAiB,cAAc,WAC/B3G,EAAKyC,WACRiD,EAAe5C,aAAY,WACzB9C,EAAK6G,qBACJ,SAaPlG,EAAOgG,iBACL,cACA,WACEtD,GAAU,EACVG,GAAgB,EAChBT,cAAc2C,MAEhB,G,IAIEoB,E,WAIJ,WAAYC,GAAS,oBACnBtF,KAAKuF,QAAUD,EACftF,KAAKwF,QAAUC,SAASC,cAAc,OACtC1F,KAAK2F,cAAgBF,SAASC,cAAc,UAC5C1F,KAAK2F,cAAc7H,GAAK,cACxBkC,KAAK2F,cAAcrG,MAAQ,MAC3BU,KAAK2F,cAAcnG,OAAS,MAE5BQ,KAAK4F,OAAO5F,KAAKuF,QAASvF,KAAKwF,SAC/BxF,KAAK4F,OAAO5F,KAAKwF,QAASxF,KAAK2F,eAE/B3F,KAAKwF,QAAQf,MAAMjF,OAAS,QAC5BQ,KAAKwF,QAAQf,MAAMoB,QAAU,OAC7B7F,KAAKwF,QAAQf,MAAMqB,eAAiB,SACpC9F,KAAKwF,QAAQf,MAAMsB,WAAa,SAChCvE,EAAaxB,KAAK2F,e,mDAGbJ,EAASS,GACdT,EAAQU,OAAOD,O,KAInB,SAASE,EAAMhH,GACb,IAAMiC,EAAY5C,EAAK4C,UACjBgF,EAAaV,SAASC,cAAc,UAC1CS,EAAW7G,MAAQ,IACnB6G,EAAW3G,OAAS,IACpB,IAOI4G,EAPEC,EAAUF,EAAW1E,WAAW,MAClCtB,EAAMjB,EAAOuC,WAAW,MAExBO,GAAW,IAAIC,MAAOC,UACtBC,EAAc,EACdC,EAAK,EAuFT,SAASkE,EAAanG,EAAKoG,EAAWtG,EAAI7B,EAAIoI,EAAQC,EAAQC,EAAYC,GAUxE,IATA,IAAIpI,EAAOgI,EAAUhI,KACjBiB,EAAS+G,EAAU/G,OACnBF,EAAQiH,EAAUjH,MAKlBsH,GAHJH,EAASA,GAAU,IAEnBE,OAA8BE,IAAhBF,EAA4BA,EAAcnH,GAEpDsH,GALJN,EAASA,GAAU,IAEnBE,OAA4BG,IAAfH,EAA2BA,EAAapH,GAI5C/C,EAAIkK,EAAQlK,EAAIqK,EAAarK,IACpC,IAAK,IAAID,EAAIkK,EAAQlK,EAAIwK,EAAYxK,IAAK,CACxC,IAAIyK,EAAMxK,EAAI+C,EAAQhD,EACtB6D,EAAII,UACF,QAAUhC,EAAW,EAANwI,EAAU,GAAK,IAAMxI,EAAW,EAANwI,EAAU,GAAK,IAAMxI,EAAW,EAANwI,EAAU,GAAK,IAAMxI,EAAW,EAANwI,EAAU,GAAK,IAAM,IACpH5G,EAAI6G,SAAS1K,EAAI2D,EAAI1D,EAAI6B,EAAI,EAAG,KAKtC,SAAS6I,IASP,GARA9G,EAAIqE,UAAU,EAAG,EAAGtF,EAAOI,MAAOJ,EAAOM,QAtD3C,WACE6G,EAAQ7B,UAAU,EAAG,EAAGtF,EAAOI,MAAOJ,EAAOM,QAC7C6G,EAAQ9F,UAAY,QACpB8F,EAAQ1B,KAAK,EAAG,EAAGzF,EAAOI,MAAOJ,EAAOM,QACxC6G,EAAQ1J,OA7BV,WACE,IAAIuK,EAAQ,GACRC,EAAM,EAEVd,EAAQjG,YACRiG,EAAQe,YAAc,QACtBf,EAAQ9F,UAAY,UACpB8F,EAAQgB,OAAO,GAAI,IACnBhB,EAAQiB,OAAO,GAAI,IACnBjB,EAAQiB,OAAO,IAAK,IACpBjB,EAAQiB,OAAO,IAAK,IACpBjB,EAAQiB,OAAO,GAAI,IACnBjB,EAAQgB,OAAO,GAAI,IACnBhB,EAAQ1J,OAER0J,EAAQ9F,UAAY,QAEpB,IAAK,IAAI5B,EAAI,EAAGA,EAAI,EAAGA,IACrB0H,EAAQtB,SAASoC,EAAK,GAAID,GAC1BC,GAAO,IACPD,GAAS,GAEXb,EAAQkB,SAQRC,GACAnB,EAAQjG,YACRiG,EAAQe,YAAc,QACtBf,EAAQgB,OAAO,GAAI,IACnBhB,EAAQzB,KAAO,2BAEf,IAAI6C,EAAQ,GAEZrB,EAAUsB,OAAOtB,QAAQjF,GAbF,oBAeIiF,GAfJ,IAevB,2BAAoC,CAAC,IAAD,yBAAxBvH,EAAwB,KAC9B8I,EAAU,IAAM,IADc,MACE,IAAM,GAE9B,YAAR9I,GAIQ,YAARA,IACFwH,EAAQ9F,UAAY,WAGtB8F,EAAQiB,OAAOG,EAAOE,GACtBF,GAAS,IARPpB,EAAQiB,OAAO,IAASK,IAnBL,8BA6BvBtB,EAAQiB,OAAO,IAAK,IACpBjB,EAAQ1J,OAyBRiL,GACAzF,GAAc,IAAIF,MAAOC,UACzBE,GAAMD,EAAcH,GAAY,IAIhCI,GAAM,GACFD,EAAcH,EAAW,MAAO,CAClC,IAAMuE,EAAYF,EAAQwB,aAAa,EAAG,EAAG3I,EAAOI,MAAOJ,EAAOM,QAClEW,EAAIwE,KAAK,EAAG,EAAGzF,EAAOI,MAAOJ,EAAOM,QACpCW,EAAIxD,OACJ2J,EAAanG,EAAKoG,EAAW,EAAG,EAAG,EAAG,EAAG,GAAKnE,EAAIlD,EAAOM,QAEzDyF,sBAAsBgC,OACjB,CACL1I,EAAKyC,UAAW,EAChB,IAAMuF,EAAYF,EAAQwB,aAAa,EAAG,EAAG3I,EAAOI,MAAOJ,EAAOM,QAClE8G,EAAanG,EAAKoG,EAAW,EAAG,EAAG,EAAG,EAAGrH,EAAOI,MAAOJ,EAAOM,SAtHlEyH,G,IA2HIa,E,WAGJ,WAAYxC,GAAS,oBACnBtF,KAAKuF,QAAUD,EACftF,KAAKwF,QAAUC,SAASC,cAAc,UACtC1F,KAAKwF,QAAQ1H,GAAK,eAClBkC,KAAKwF,QAAQlG,MAAQ,IACrBU,KAAKwF,QAAQhG,OAAS,IAEtBQ,KAAK4F,OAAO5F,KAAKuF,QAASvF,KAAKwF,SAE/BU,EAAMlG,KAAKwF,S,mDAGND,EAASS,GACdT,EAAQU,OAAOD,O,KAIb+B,E,WAKJ,WAAYzC,GAAS,oBACnBtF,KAAKuF,QAAUD,EACftF,KAAKwF,QAAUC,SAASC,cAAc,OACtC1F,KAAKgI,gBAAkB,IAAIF,EAAY9H,KAAKwF,SAC5CxF,KAAKiI,YAAc,IAAI5C,EAAQrF,KAAKwF,SAEpCxF,KAAK4F,OAAO5F,KAAKuF,QAASvF,KAAKwF,SAE/BxF,KAAKwF,QAAQf,MAAMoB,QAAU,OAC7B7F,KAAKwF,QAAQf,MAAMyD,cAAgB,S,mDAG9B3C,EAASS,GACdT,EAAQU,OAAOD,O,KAgBJmC,EATb,WAAYC,GAAO,oBACjB,IAAMC,EAAa5C,SAAS6C,eAAT,UAA2BF,IAC9CpI,KAAKqI,WAAaA,EAClBrI,KAAKwF,QAAU,KAEX6C,IAAYrI,KAAKwF,QAAU,IAAIuC,EAAK/H,KAAKqI,cCruBpCE,EAAmB,WAI9B,OAHAC,qBAAU,WACR,IAAIL,EAAY,iBACf,IAED,oCACE,6BAAS9J,UAAU,qBACjB,mDACA,wNAIA,6BACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,qBACf,kDAEF,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,sBACf,mEAGJ,yBAAKP,GAAG,cAAc2G,MAAO,CAAEnF,MAAO,QAASE,OAAQ,QAASiJ,OAAQ,kBAAmBC,UAAW,YC2C/FC,EA/DH,WACV,IAAIrJ,EAAQ0F,OAAO4D,WACfpJ,EAASwF,OAAO6D,YAGhB/I,EAA4B,IAFVX,KAAK2J,IAAIxJ,EAAOE,GAEE,EACpClD,EAAIgD,EAAQ,EACZ/C,EAAIiD,EAAS,EAPD,EAS0BnC,oBAAU,GATpC,mBASTL,EATS,KASMC,EATN,OAUkBI,oBAAS,GAV3B,mBAUTH,EAVS,KAUEC,EAVF,OAWQE,mBAHJ,IARJ,mBAWT0L,EAXS,KAWHC,EAXG,KAehB,OAHAR,qBAAU,WACIQ,EAAZ9L,EAAoB,IALF,MAMjB,CAACA,IAEF,oCACE,yBAAKoC,MAAM,OAAOE,OAAO,QACvB,kBAAC,EAAD,CACElD,EAAGA,EACHC,EAAGA,EACHgC,KAAM,CACJE,MAAOwK,MAAM,IAAItM,KAAK,GACtBD,MAAOqC,EACPH,MAAOI,GAETpC,YAAakD,EAASiJ,EACtBlM,YAAaiD,EACbhD,aAAc,EACdC,SAAU,IACVC,cAAeA,EACfC,iBAAkBA,EAClBC,UAAWA,EACXC,aAAcA,KAGjBH,GAAiB,EACE,IAAlBA,EACEE,EAEE,kBAAC,EAAD,MAGA,6BAASmB,UAAU,cACjB,yBACEoG,MAAO,CAAEyE,aAAc,QACvB5J,MAAM,OACNE,OAAO,OACP2J,IAAI,6FAMV,6BAAS9K,UAAU,WACjB,6CAGF,OCzDV+K,IAASxD,OAAO,kBAAC,EAAD,MAASH,SAAS6C,eAAe,W","file":"static/js/main.6e297c2a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport * as d3 from \"d3\";\n\nexport const translate = (x, y) => `translate(${x}, ${y})`;\nexport const Slice = ({\n  value,\n  label,\n  fill,\n  innerRadius = 0,\n  outerRadius,\n  cornerRadius,\n  padAngle,\n  sectionNumber,\n  setSectionNumber,\n  isClicked,\n  setIsClicked,\n  ...props\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const onMouseOver = (event) => {\n    // console.log(event.currentTarget.childNodes[1].childNodes[0]); // get innerText\n    setIsHovered(true);\n    !isClicked && setSectionNumber(parseInt(event.currentTarget.id));\n  };\n\n  const onMouseOut = () => {\n    setIsHovered(false);\n    !isClicked && setSectionNumber(-1);\n  };\n\n  const handleClick = () => {\n    sectionNumber === 3 && setIsClicked(!isClicked);\n  };\n\n  if (isHovered) {\n    outerRadius *= 1.1;\n  }\n  let arc = d3.svg\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius)\n    .cornerRadius(cornerRadius)\n    .padAngle(padAngle);\n  return (\n    <g\n      onMouseOver={onMouseOver}\n      onMouseOut={onMouseOut}\n      onClick={handleClick}\n      {...props}\n    >\n      <path d={arc(value)} fill={fill} />\n      <text\n        transform={translate(...arc.centroid(value))}\n        dy=\".35em\"\n        className=\"label\"\n      >\n        {label}\n      </text>\n    </g>\n  );\n};\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { Slice, translate } from \"./Slice\";\n\nexport const Pie = ({\n  x,\n  y,\n  data,\n  // setSectionNumber,\n  // innerRadius,\n  // outerRadius,\n  // cornerRadius,\n  // padAngle,\n  ...props\n}) => {\n  // let colorScale = d3.scale.category10();\n  let pie = d3.layout.pie();\n  const renderSlice = (value, i, label, color) => {\n    return (\n      <Slice\n        key={i}\n        id={i}\n        value={value}\n        label={label}\n        fill={color}\n        // innerRadius={innerRadius}\n        // outerRadius={outerRadius}\n        // cornerRadius={cornerRadius}\n        // padAngle={padAngle}\n        // setSectionNumber={setSectionNumber}\n        {...props}\n      />\n    );\n  };\n  return (\n    <g transform={translate(x, y)}>\n      {pie(data.scale).map((value, i) =>\n        renderSlice(value, i, data.label[i], data.color[i])\n      )}\n    </g>\n  );\n};\n","export const labels = [\n  \"No poverty\",\n  \"Zero hunger\",\n  \"Good Health and Well-being\",\n  \"Quality Education\",\n  \"Gender Equality\",\n  \"Clean Water and Sanitation\",\n  \"Affordable and Clean Energy\",\n  \"Decent Work and Economy Growth\",\n  \"Industry, Innovation, and Infrastructure\",\n  \"Reduced Inequalities\",\n  \"Sustainable cities and communities\",\n  \"Responsible Consumption and Production\",\n  \"Climate Action\",\n  \"Life Below Water\",\n  \"Life on Land\",\n  \"Peace, Justice and Strong Institutions\",\n  \"Partnerships\",\n];\nexport const colors = [\n  \"#EB1C2D\",\n  \"#D2A12A\",\n  \"#279B48\",\n  \"#C32136\",\n  \"#EF4128\",\n  \"#06ADD9\",\n  \"#FEB614\",\n  \"#8F1838\",\n  \"#F36E29\",\n  \"#E11284\",\n  \"#F99E29\",\n  \"#CF8E2A\",\n  \"#3F7E45\",\n  \"#1C97D3\",\n  \"#59BA47\",\n  \"#136A9F\",\n  \"#14496B\",\n];\n","let canvas = null;\n\nfunction randomColor(bigBalls) {\n  // return rc;\n  return \"white\";\n}\n\nfunction randomX(canvas) {\n  let x = Math.floor(Math.random() * canvas.width + canvas.width / 2);\n  if (x < 30) {\n    x = 30;\n  } else if (x + 30 > canvas.width) {\n    x = canvas.width - 30;\n  }\n  return x;\n}\n\nfunction randomY(canvas) {\n  let y = Math.floor(Math.random() * canvas.height);\n  if (y < 30) {\n    y = 30;\n  } else if (y + 30 > canvas.height) {\n    y = canvas.height - 30;\n  }\n  return y;\n}\n\nfunction randomDx() {\n  const dxs = [2, -2];\n  let r = Math.floor(Math.random() * 2);\n  return dxs[r];\n  // let r = Math.floor(Math.random() * 10 - 4);\n  // return r;\n}\n\nfunction randomDy() {\n  const dys = [2, -2];\n  let r = Math.floor(Math.random() * 2);\n  return dys[r];\n  // let r = Math.floor(Math.random() * 10 - 3);\n  // return r;\n}\n\nfunction distance(a, b) {\n  return Math.sqrt((a.x - b.x) ** 2 + (a.y - b.y) ** 2);\n}\n\nclass Ball {\n  constructor(x, y, radius, bigBalls) {\n    this.radius = radius;\n    this.x = x;\n    this.y = y;\n\n    this.dx = randomDx();\n    this.dy = randomDy();\n\n    // mass is that of a sphere as opposed to circle\n    // it *does* make a difference in how realistic it looks\n    this.mass = this.radius * this.radius * this.radius;\n    this.color = randomColor();\n  }\n\n  draw(ctx) {\n    ctx.beginPath();\n    ctx.arc(Math.round(this.x), Math.round(this.y), this.radius, 0, 2 * Math.PI);\n    ctx.fillStyle = this.color;\n    ctx.fill();\n    // ctx.strokeStyle = \"rgba(0, 0, 0, 0.6)\";\n    // ctx.stroke();\n    ctx.closePath();\n  }\n\n  speed() {\n    // magnitude of velocity vector\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n  angle() {\n    // velocity's angle with the x axis\n    return Math.atan2(this.dy, this.dx);\n  }\n  onGround() {\n    return this.y + this.radius >= canvas.height;\n  }\n}\n\nconst covidDataChart = [\"1(0216)\", \"2(0301)\", \"3(0316)\", \"4(0401)\", \"5(0503)\", \"6(future)\", \"7(future)\", \"8(last)\"];\n\nlet time = 0;\nlet offset = 2428;\nlet timepass = false;\n\nclass Data {\n  constructor() {\n    this.affectedLearner = 999014;\n    this.pastAffectedLearner = 0;\n    this.totalLearner = this.affectedLearner * 1000;\n    this.isDrawed = false;\n    this.chartInterval = 0;\n    this.covidDataDiff = 0;\n    this.covidData = {\n      \"1(0216)\": 0,\n      \"2(0301)\": 17.1,\n      \"3(0316)\": 44,\n      \"4(0401)\": 91.3,\n      \"5(0503)\": 73.4,\n      \"6(future)\": 72,\n      \"7(future)\": 71,\n      \"8(last)\": 69,\n    };\n\n    const interval = setInterval(() => {\n      time += 200;\n      if (time > 17000) clearInterval(interval);\n      if (time > 0 && time < offset) {\n        this.covidDataDiff += (this.covidData[covidDataChart[1]] - this.covidData[covidDataChart[0]]) / 11.7;\n      }\n      if (time > offset && time < offset * 2) {\n        this.covidDataDiff += (this.covidData[covidDataChart[2]] - this.covidData[covidDataChart[1]]) / 11.7;\n      }\n      if (time > offset * 2 && time < offset * 3) {\n        this.covidDataDiff += (this.covidData[covidDataChart[3]] - this.covidData[covidDataChart[2]]) / 11.7;\n      }\n      if (time > offset * 3 && time < offset * 4) {\n        this.covidDataDiff += (this.covidData[covidDataChart[4]] - this.covidData[covidDataChart[3]]) / 11.7;\n      }\n      if (time > offset * 4 && time < offset * 5) {\n        timepass = true;\n        this.covidDataDiff += (this.covidData[covidDataChart[5]] - this.covidData[covidDataChart[4]]) / 11.7;\n      }\n      if (time > offset * 5 && time < offset * 6) {\n        this.covidDataDiff += (this.covidData[covidDataChart[6]] - this.covidData[covidDataChart[5]]) / 11.7;\n      }\n      if (time > offset * 6 && time < offset * 7) {\n        this.covidDataDiff += (this.covidData[covidDataChart[7]] - this.covidData[covidDataChart[6]]) / 11.7;\n      }\n    }, 200);\n  }\n\n  getSubtractAffectedLearner() {\n    return Math.floor(this.affectedLearner / 10000000) - Math.floor(this.pastAffectedLearner / 10000000);\n  }\n  getAffectedLearner() {\n    return Math.floor(this.affectedLearner / 10000000);\n  }\n  getTotalLearner() {\n    return Math.floor(this.totalLearner / 10000000);\n  }\n  updateFutureData() {\n    if (timepass) {\n      if (time > offset * 4 && time < offset * 5) {\n        this.covidData[covidDataChart[5]] -= 0.8;\n        this.covidData[covidDataChart[6]] -= 0.8;\n        this.covidData[covidDataChart[7]] -= 0.8;\n      }\n      if (time > offset * 5 && time < offset * 6) {\n        this.covidData[covidDataChart[6]] -= 0.8;\n        this.covidData[covidDataChart[7]] -= 0.8;\n      }\n      if (time > offset * 6 && time < offset * 7) {\n        this.covidData[covidDataChart[7]] -= 0.8;\n      }\n    }\n  }\n}\n\nconst data = new Data();\n\nfunction actionCanvas(canvas) {\n  // data.run();\n  let ctx = canvas.getContext(\"2d\");\n\n  let leftBalls = [];\n  let rightBalls = [];\n\n  let mouseon = false;\n  let offsetX = 0;\n  let offsetY = 0;\n  let mousePosition = false;\n\n  let bigBalls = false;\n\n  let lastTime = new Date().getTime();\n  let currentTime = 0;\n  let dt = 0;\n\n  // let numStartingSmallBalls = data.getTotalLearner();\n  // let numStartingBigBalls = 0;\n  let numStartingLeftBalls = 100;\n\n  function clearCanvas() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n\n  function canvasBackground() {\n    if (mousePosition === \"right\") {\n      canvas.style.backgroundColor = \"black\";\n    } else {\n      canvas.style.backgroundColor = \"#136A9F\";\n    }\n    ctx.beginPath();\n    ctx.rect(0, 0, canvas.width / 2, canvas.height);\n    if (mousePosition === \"left\") {\n      ctx.fillStyle = \"black\";\n    } else {\n      ctx.fillStyle = \"#8F1838\";\n    }\n    ctx.fill();\n  }\n\n  function wallCollision(ball) {\n    // console.log(ball);\n    if (ball.x < canvas.width / 2 - ball.radius) {\n      if (ball.x - ball.radius + ball.dx < 0 || ball.x + ball.radius + ball.dx > canvas.width / 2) {\n        ball.dx *= -1;\n      }\n    }\n    if (ball.x > canvas.width / 2 + ball.radius) {\n      if (ball.x - ball.radius + ball.dx < canvas.width / 2 || ball.x + ball.radius + ball.dx > canvas.width) {\n        ball.dx *= -1;\n      }\n    }\n    if (ball.y - ball.radius + ball.dy < 0 || ball.y + ball.radius + ball.dy > canvas.height) {\n      ball.dy *= -1;\n    }\n    if (ball.y + ball.radius > canvas.height) {\n      ball.y = canvas.height - ball.radius;\n    }\n    if (ball.y - ball.radius < 0) {\n      ball.y = ball.radius;\n    }\n    if (ball.x + ball.radius > canvas.width) {\n      ball.x = canvas.width - ball.radius;\n    }\n    if (ball.x - ball.radius < 0) {\n      ball.x = ball.radius;\n    }\n  }\n\n  function ballCollision(balls) {\n    for (let i = 0; i < balls.length - 1; i++) {\n      for (let j = i + 1; j < balls.length; j++) {\n        let obj1 = balls[i];\n        let obj2 = balls[j];\n        let dist = distance(obj1, obj2);\n        if (dist < obj1.radius + obj2.radius) {\n          let vCollision = { x: obj2.x - obj1.x, y: obj2.y - obj1.y };\n          let _distance = Math.sqrt((obj2.x - obj1.x) * (obj2.x - obj1.x) + (obj2.y - obj1.y) * (obj2.y - obj1.y));\n          let vCollisionNorm = { x: vCollision.x / _distance, y: vCollision.y / _distance };\n          let vRelativeVelocity = { x: obj1.dx - obj2.dx, y: obj1.dy - obj2.dy };\n          let speed = vRelativeVelocity.x * vCollisionNorm.x + vRelativeVelocity.y * vCollisionNorm.y;\n\n          obj1.dx -= speed * vCollisionNorm.x;\n          obj1.dy -= speed * vCollisionNorm.y;\n          obj2.dx += speed * vCollisionNorm.x;\n          obj2.dy += speed * vCollisionNorm.y;\n          staticCollision(obj1, obj2);\n        }\n      }\n      wallCollision(balls[i]);\n    }\n\n    if (balls.length > 0) wallCollision(balls[balls.length - 1]);\n  }\n\n  // function ballCollision2() {\n  //   for (let i = 0; i < leftBalls.length - 1; i++) {\n  //     for (let j = i + 1; j < leftBalls.length; j++) {\n  //       let ob1 = leftBalls[i];\n  //       let ob2 = leftBalls[j];\n  //       let dist = distance(ob1, ob2);\n\n  //       if (dist < ob1.radius + ob2.radius) {\n  //         let theta1 = ob1.angle();\n  //         let theta2 = ob2.angle();\n  //         let phi = Math.atan2(ob2.y - ob1.y, ob2.x - ob1.x);\n  //         let m1 = ob1.mass;\n  //         let m2 = ob2.mass;\n  //         let v1 = ob1.speed();\n  //         let v2 = ob2.speed();\n\n  //         let dx1F =\n  //           ((v1 * Math.cos(theta1 - phi) * (m1 - m2) + 2 * m2 * v2 * Math.cos(theta2 - phi)) / (m1 + m2)) * Math.cos(phi) +\n  //           v1 * Math.sin(theta1 - phi) * Math.cos(phi + Math.PI / 2);\n  //         let dy1F =\n  //           ((v1 * Math.cos(theta1 - phi) * (m1 - m2) + 2 * m2 * v2 * Math.cos(theta2 - phi)) / (m1 + m2)) * Math.sin(phi) +\n  //           v1 * Math.sin(theta1 - phi) * Math.sin(phi + Math.PI / 2);\n  //         let dx2F =\n  //           ((v2 * Math.cos(theta2 - phi) * (m2 - m1) + 2 * m1 * v1 * Math.cos(theta1 - phi)) / (m1 + m2)) * Math.cos(phi) +\n  //           v2 * Math.sin(theta2 - phi) * Math.cos(phi + Math.PI / 2);\n  //         let dy2F =\n  //           ((v2 * Math.cos(theta2 - phi) * (m2 - m1) + 2 * m1 * v1 * Math.cos(theta1 - phi)) / (m1 + m2)) * Math.sin(phi) +\n  //           v2 * Math.sin(theta2 - phi) * Math.sin(phi + Math.PI / 2);\n\n  //         ob1.dx = dx1F;\n  //         ob1.dy = dy1F;\n  //         ob2.dx = dx2F;\n  //         ob2.dy = dy2F;\n  //         // ob1.dx *= -1;\n  //         // ob1.dy *= -1;\n  //         // ob2.dx *= -1;\n  //         // ob2.dy *= -1;\n\n  //         staticCollision(ob1, ob2);\n  //       }\n  //     }\n  //     wallCollision(leftBalls[i]);\n  //   }\n\n  //   if (leftBalls.length > 0) wallCollision(leftBalls[leftBalls.length - 1]);\n  // }\n\n  function staticCollision(ob1, ob2, emergency = false) {\n    let overlap = ob1.radius + ob2.radius - distance(ob1, ob2);\n    // let smallerObject = ob1.radius < ob2.radius ? ob1 : ob2;\n    // let biggerObject = ob1.radius > ob2.radius ? ob1 : ob2;\n    let smallerObject = ob1;\n    let biggerObject = ob2;\n\n    // When things go normally, this line does not execute.\n    // \"Emergency\" is when staticCollision has run, but the collision\n    // still hasn't been resolved. Which implies that one of the objects\n    // is likely being jammed against a corner, so we must now move the OTHER one instead.\n    // in other words: this line basically swaps the \"little guy\" role, because\n    // the actual little guy can't be moved away due to being blocked by the wall.\n    if (emergency) [smallerObject, biggerObject] = [biggerObject, smallerObject];\n\n    let theta = Math.atan2(biggerObject.y - smallerObject.y, biggerObject.x - smallerObject.x);\n    smallerObject.x -= overlap * Math.cos(theta);\n    smallerObject.y -= overlap * Math.sin(theta);\n\n    if (distance(ob1, ob2) < ob1.radius + ob2.radius) {\n      // we don't want to be stuck in an infinite emergency.\n      // so if we have already run one emergency round; just ignore the problem.\n      if (!emergency) staticCollision(ob1, ob2, true);\n    }\n  }\n\n  // function keyDownHandler(event) {\n  //   if (event.keyCode == 67) {\n  //     // c\n  //     leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n  //   } else if (event.keyCode == 80) {\n  //     // p\n  //     paused = !paused;\n  //   } else if (event.keyCode == 71) {\n  //     // g\n  //     // This feature WAS taken out\n  //     // because of a bug where\n  //     // balls \"merge\" with each other\n  //     // when under a lot of pressure.\n\n  //     // putting back in\n\n  //     gravityOn = !gravityOn;\n  //   } else if (event.keyCode == 65) {\n  //     // A\n  //     leftHeld = true;\n  //   } else if (event.keyCode == 87) {\n  //     // W\n  //     upHeld = true;\n  //   } else if (event.keyCode == 68) {\n  //     // D\n  //     rightHeld = true;\n  //   } else if (event.keyCode == 83) {\n  //     // S\n  //     downHeld = true;\n  //   } else if (event.keyCode == 82) {\n  //     // r\n  //     leftBalls = [];\n  //   } else if (event.keyCode == 75) {\n  //     // k\n  //     clearCanv = !clearCanv;\n  //   } else if (event.keyCode == 88) {\n  //     // x\n  //     bigBalls = !bigBalls;\n  //   }\n  // }\n\n  // function applyGravity() {\n  //   for (let obj in leftBalls) {\n  //     let ob = leftBalls[obj];\n  //     if (ob.onGround() == false) {\n  //       ob.dy += 0.29;\n  //     }\n\n  //     // apply basic drag\n  //     ob.dx *= 0.99;\n  //     ob.dy *= 0.975;\n  //   }\n  // }\n\n  function moveObjects(balls) {\n    for (let i = 0; i < balls.length; i++) {\n      let ob = balls[i];\n      ob.x += ob.dx * dt;\n      ob.y += ob.dy * dt;\n    }\n  }\n\n  function drawObjects(balls) {\n    for (let obj in balls) {\n      balls[obj].draw(ctx);\n    }\n  }\n\n  function draw() {\n    currentTime = new Date().getTime();\n    dt = (currentTime - lastTime) / 1000; // delta time in seconds\n\n    // dirty and lazy solution\n    // instead of scaling up every velocity vector the program\n    // we increase the speed of time\n    dt *= 20;\n\n    clearCanvas();\n    canvasBackground();\n\n    {\n      moveObjects(leftBalls);\n      moveObjects(rightBalls);\n      ballCollision(leftBalls);\n      ballCollision(rightBalls);\n    }\n\n    drawObjects(leftBalls);\n    drawObjects(rightBalls);\n\n    if (mouseon) {\n      // The size of the emoji is set with the font\n      ctx.font = \"16px serif\";\n      // use these alignment properties for \"better\" positioning\n      ctx.textAlign = \"center\";\n      ctx.textBaseline = \"top\";\n      // draw the emoji\n      if (mousePosition === \"left\") {\n        ctx.fillText(\"🌐ONLINE EDU\", offsetX, offsetY);\n      }\n      if (mousePosition === \"right\") {\n        ctx.fillText(\"🏫GOOD FACILITY\", offsetX, offsetY);\n      }\n    }\n\n    //logger();\n\n    lastTime = currentTime;\n    window.requestAnimationFrame(draw);\n  }\n\n  // spawn the initial small thingies.\n  for (let i = 0; i < numStartingLeftBalls; i++) {\n    leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n  }\n\n  // // manually spawn the few large ones that\n  // // start with no velocity. (lazy code)\n  // bigBalls = true;\n  // for (i = 0; i < numStartingBigBalls; i++) {\n  //   let temp = new Ball(randomX(canvas), randomY(canvas), randomRadius(bigBalls), bigBalls);\n  //   temp.dx = randomDx() / 8;\n  //   temp.dy = randomDy() / 12;\n  //   leftBalls[leftBalls.length] = temp;\n  // }\n\n  let prevData = 0;\n  let currentData = 0;\n  let time = 0;\n  const interval = setInterval(() => {\n    time += 200;\n    if (time > 17000) clearInterval(interval);\n    const covidRate = data.covidDataDiff;\n    currentData = covidRate;\n    let diff = currentData - prevData;\n    if (diff > 0) {\n      for (let i = 0; i < Math.round(diff); i++) {\n        leftBalls.splice(0, 1);\n        rightBalls[rightBalls.length] = new Ball(30, randomY(canvas), 5, bigBalls);\n      }\n    } else {\n      if (mouseon) {\n        for (let i = 0; i < Math.round(Math.abs(diff) + 0.3); i++) {\n          rightBalls.splice(0, 1);\n          leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n        }\n      } else {\n        for (let i = 0; i < Math.round(Math.abs(diff)); i++) {\n          rightBalls.splice(0, 1);\n          leftBalls[leftBalls.length] = new Ball(randomX(canvas), randomY(canvas), 5, bigBalls);\n        }\n      }\n    }\n    prevData = currentData;\n  }, 200);\n\n  draw();\n\n  let tempInterval;\n\n  canvas.addEventListener(\"mousemove\", onMouseMove, false);\n  canvas.addEventListener(\"mouseenter\", () => {\n    if (!data.isDrawed) {\n      tempInterval = setInterval(() => {\n        data.updateFutureData();\n      }, 100);\n    }\n  });\n  function onMouseMove(e) {\n    mouseon = true;\n    offsetX = e.offsetX;\n    offsetY = e.offsetY;\n    if (e.offsetX < canvas.width / 2) {\n      mousePosition = \"left\";\n    } else {\n      mousePosition = \"right\";\n    }\n  }\n  canvas.addEventListener(\n    \"mouseleave\",\n    () => {\n      mouseon = false;\n      mousePosition = false;\n      clearInterval(tempInterval);\n    },\n    false,\n  );\n}\n\nclass Canvas4 {\n  $parent;\n  $target;\n  $actionCanvas;\n  constructor(parent) {\n    this.$parent = parent;\n    this.$target = document.createElement(\"div\");\n    this.$actionCanvas = document.createElement(\"canvas\");\n    this.$actionCanvas.id = \"test-canvas\";\n    this.$actionCanvas.width = \"400\";\n    this.$actionCanvas.height = \"200\";\n\n    this.render(this.$parent, this.$target);\n    this.render(this.$target, this.$actionCanvas);\n\n    this.$target.style.height = \"200px\";\n    this.$target.style.display = \"flex\";\n    this.$target.style.justifyContent = \"center\";\n    this.$target.style.alignItems = \"center\";\n    actionCanvas(this.$actionCanvas);\n  }\n\n  render($parent, element) {\n    $parent.append(element);\n  }\n}\n\nfunction chart(canvas) {\n  const covidData = data.covidData;\n  const tempCanvas = document.createElement(\"canvas\");\n  tempCanvas.width = 400;\n  tempCanvas.height = 100;\n  const tempCtx = tempCanvas.getContext(\"2d\");\n  var ctx = canvas.getContext(\"2d\");\n\n  let lastTime = new Date().getTime();\n  let currentTime = 0;\n  let dt = 0;\n\n  let entries;\n\n  // setInterval(() => {\n  //   data.push(11);\n  // }, 1000);\n\n  drawChart();\n\n  // function drawGrid() {\n  //   let xGrid = 10;\n  //   let yGrid = 10;\n  //   let cellSize = 10;\n  //   tempCtx.beginPath();\n  //   while (xGrid < canvas.height) {\n  //     tempCtx.moveTo(0, xGrid);\n  //     tempCtx.lineTo(canvas.width, xGrid);\n  //     xGrid += cellSize;\n  //   }\n  //   while (yGrid < canvas.width) {\n  //     tempCtx.moveTo(yGrid, 0);\n  //     tempCtx.lineTo(yGrid, canvas.height);\n  //     yGrid += cellSize;\n  //   }\n  //   tempCtx.strokeStyle = \"#ccc\";\n  //   tempCtx.stroke();\n  // }\n\n  function drawAxis() {\n    let yPlot = 90;\n    let pop = 0;\n\n    tempCtx.beginPath();\n    tempCtx.strokeStyle = \"black\";\n    tempCtx.fillStyle = \"#136A9F\";\n    tempCtx.moveTo(50, 20);\n    tempCtx.lineTo(50, 80);\n    tempCtx.lineTo(380, 80);\n    tempCtx.lineTo(380, 20);\n    tempCtx.lineTo(50, 20);\n    tempCtx.moveTo(50, 80);\n    tempCtx.fill();\n\n    tempCtx.fillStyle = \"black\";\n\n    for (let i = 0; i < 2; i++) {\n      tempCtx.fillText(pop, 20, yPlot);\n      pop += 100;\n      yPlot -= 70;\n    }\n    tempCtx.stroke();\n  }\n\n  function drawTempChart() {\n    tempCtx.clearRect(0, 0, canvas.width, canvas.height);\n    tempCtx.fillStyle = \"white\";\n    tempCtx.rect(0, 0, canvas.width, canvas.height);\n    tempCtx.fill();\n    drawAxis();\n    tempCtx.beginPath();\n    tempCtx.strokeStyle = \"black\";\n    tempCtx.moveTo(50, 80);\n    tempCtx.font = \"bold normal 10px Verdana\";\n\n    var xPlot = 50;\n\n    entries = Object.entries(covidData);\n\n    for (const [key, value] of entries) {\n      var valueY = (60 * (100 - value)) / 100 + 20;\n      // tempCtx.fillText(\"(\" + key + \")\", xPlot, valueInBlocks - 5);\n      if (key === \"8(last)\") {\n        tempCtx.lineTo(380 - 1, valueY);\n        continue;\n      }\n      if (key !== \"1(0216)\") {\n        tempCtx.fillStyle = \"#8F1838\";\n      }\n      // tempCtx.arc(xPlot, valueY, 2, 0, Math.PI * 2, true);\n      tempCtx.lineTo(xPlot, valueY);\n      xPlot += 50;\n    }\n    tempCtx.lineTo(380, 80);\n    tempCtx.fill();\n  }\n\n  function putImageData(ctx, imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n    var data = imageData.data;\n    var height = imageData.height;\n    var width = imageData.width;\n    dirtyX = dirtyX || 0;\n    dirtyY = dirtyY || 0;\n    dirtyWidth = dirtyWidth !== undefined ? dirtyWidth : width;\n    dirtyHeight = dirtyHeight !== undefined ? dirtyHeight : height;\n    var limitBottom = dirtyY + dirtyHeight;\n    var limitRight = dirtyX + dirtyWidth;\n    for (var y = dirtyY; y < limitBottom; y++) {\n      for (var x = dirtyX; x < limitRight; x++) {\n        var pos = y * width + x;\n        ctx.fillStyle =\n          \"rgba(\" + data[pos * 4 + 0] + \",\" + data[pos * 4 + 1] + \",\" + data[pos * 4 + 2] + \",\" + data[pos * 4 + 3] / 255 + \")\";\n        ctx.fillRect(x + dx, y + dy, 1, 1);\n      }\n    }\n  }\n\n  function drawChart() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawTempChart();\n    currentTime = new Date().getTime();\n    dt = (currentTime - lastTime) / 1000; // delta time in seconds\n    // dirty and lazy solution\n    // instead of scaling up every velocity vector the program\n    // we increase the speed of time\n    dt *= 20;\n    if (currentTime - lastTime < 16500) {\n      const imageData = tempCtx.getImageData(0, 0, canvas.width, canvas.height);\n      ctx.rect(0, 0, canvas.width, canvas.height);\n      ctx.fill();\n      putImageData(ctx, imageData, 0, 0, 0, 0, 50 + dt, canvas.height);\n\n      requestAnimationFrame(drawChart);\n    } else {\n      data.isDrawed = true;\n      const imageData = tempCtx.getImageData(0, 0, canvas.width, canvas.height);\n      putImageData(ctx, imageData, 0, 0, 0, 0, canvas.width, canvas.height);\n    }\n  }\n}\n\nclass Simulation4 {\n  $parent;\n  $target;\n  constructor(parent) {\n    this.$parent = parent;\n    this.$target = document.createElement(\"canvas\");\n    this.$target.id = \"test-canvas2\";\n    this.$target.width = 400;\n    this.$target.height = 100;\n\n    this.render(this.$parent, this.$target);\n\n    chart(this.$target);\n  }\n\n  render($parent, element) {\n    $parent.append(element);\n  }\n}\n\nclass Dsc4 {\n  $parent;\n  $target;\n  $simulationComp;\n  $canvasComp;\n  constructor(parent) {\n    this.$parent = parent;\n    this.$target = document.createElement(\"div\");\n    this.$simulationComp = new Simulation4(this.$target);\n    this.$canvasComp = new Canvas4(this.$target);\n\n    this.render(this.$parent, this.$target);\n\n    this.$target.style.display = \"flex\";\n    this.$target.style.flexDirection = \"column\";\n  }\n\n  render($parent, element) {\n    $parent.append(element);\n  }\n}\n\nclass Dscomponent {\n  $container;\n  $target;\n  constructor(name) {\n    const $container = document.getElementById(`${name}`);\n    this.$container = $container;\n    this.$target = null;\n\n    if ($container) this.$target = new Dsc4(this.$container);\n  }\n}\n\nexport default Dscomponent;\n","import React, { useEffect } from \"react\";\nimport Dscomponent from \"./dscomponent\";\n\nexport const QualityEducation = () => {\n  useEffect(() => {\n    new Dscomponent(\"dscomponent\");\n  }, []);\n  return (\n    <>\n      <section className=\"quality-education\">\n        <h1>4. QualityEducation</h1>\n        <p>\n          Put your mouse inside the canvas. Then the chart will change. Up to the chart's peak is static data about the percentage of\n          affected learners by COVID-19 and subsequent data is dynamic.\n        </p>\n        <div>\n          <div className=\"color-description\">\n            <div className=\"color-square-red\"></div>\n            <div>affected Learner</div>\n          </div>\n          <div className=\"color-description\">\n            <div className=\"color-square-blue\"></div>\n            <div>Total Learner - affected Learner</div>\n          </div>\n        </div>\n        <div id=\"dscomponent\" style={{ width: \"400px\", height: \"300px\", border: \"3px solid black\", marginTop: \"4px\" }}></div>\n      </section>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Pie } from \"./Pie\";\nimport { labels, colors } from \"./arrays\";\nimport { QualityEducation } from \"./QualityEducation\";\n\nconst App = () => {\n  let width = window.innerWidth;\n  let height = window.innerHeight;\n  let minViewportSize = Math.min(width, height);\n  // set size of pie - ver1: 0.9\n  let radius = (minViewportSize * 0.98) / 2;\n  let x = width / 2;\n  let y = height / 2;\n  const defaultRate = 0.7;\n  const [sectionNumber, setSectionNumber] = useState(-1);\n  const [isClicked, setIsClicked] = useState(false);\n  const [rate, setRate] = useState(defaultRate);\n  useEffect(() => {\n    isClicked ? setRate(0.95) : setRate(defaultRate);\n  }, [isClicked]);\n  return (\n    <>\n      <svg width=\"100%\" height=\"100%\">\n        <Pie\n          x={x}\n          y={y}\n          data={{\n            scale: Array(17).fill(1),\n            label: labels,\n            color: colors,\n          }}\n          innerRadius={radius * rate}\n          outerRadius={radius}\n          cornerRadius={6}\n          padAngle={0.01}\n          sectionNumber={sectionNumber}\n          setSectionNumber={setSectionNumber}\n          isClicked={isClicked}\n          setIsClicked={setIsClicked}\n        />\n      </svg>\n      {sectionNumber > -1 ? (\n        sectionNumber === 3 ? (\n          isClicked ? (\n            // detail\n            <QualityEducation />\n          ) : (\n            // preview\n            <section className=\"preview qe\">\n              <img\n                style={{ borderRadius: \"10px\" }}\n                width=\"100%\"\n                height=\"100%\"\n                src=\"https://github.com/17dscs/documentation/blob/master/images/dsc4-screenshot.png?raw=true\"\n              />\n            </section>\n          )\n        ) : (\n          //preparing..\n          <section className=\"preview\">\n            <h1>Preparing...</h1>\n          </section>\n        )\n      ) : null}\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/main.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}